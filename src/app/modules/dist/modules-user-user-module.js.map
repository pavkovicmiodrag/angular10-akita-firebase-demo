{"version":3,"sources":["./src/app/modules/user/user-routing.module.ts","./src/app/modules/user/user.component.ts","./src/app/modules/user/user.component.html","./src/app/modules/user/user.module.ts"],"names":[],"mappings":"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","file":"modules-user-user-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserComponent } from './user.component';\n\nconst routes: Routes = [{ path: '', component: UserComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthService } from '../core/auth.service';\n\n@Component({\n  selector: 'app-user-container',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n  public errorMessages$ = this.auth.authErrorMessages$;\n  public user$ = this.auth.user$;\n  public isLoading$ = this.auth.isLoading$;\n  public loginForm: FormGroup;\n  public hide = true;\n\n  constructor(private fb: FormBuilder, private auth: AuthService) {}\n\n  ngOnInit() {\n    this.createLoginForm();\n  }\n\n  private createLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  public signUp() {\n    this.checkFormValidity(() => {\n      this.auth.signUpFirebase(this.loginForm.value);\n    });\n  }\n\n  public login() {\n    this.checkFormValidity(() => {\n      this.auth.loginFirebase(this.loginForm.value);\n    });\n  }\n\n  private checkFormValidity(cb) {\n    if (this.loginForm.valid) {\n      cb();\n    } else {\n      this.errorMessages$.next('Please enter correct Email and Password value');\n    }\n  }\n\n  public logOut() {\n    this.auth\n      .logOutFirebase()\n      .then(() => {\n        this.auth.authErrorMessages$.next(null);\n        this.auth.isLoading$.next(false);\n        this.auth.user$.next(null);\n      })\n      .catch(e => {\n        console.error(e);\n        this.auth.isLoading$.next(false);\n        this.auth.authErrorMessages$.next(\n          'Something is wrong when signing out!'\n        );\n      });\n  }\n\n  public getErrorMessage(controlName: string, errorName: string): string {\n    const control = this.loginForm.get(controlName);\n    return control.hasError('required')\n      ? 'You must enter a value'\n      : control.hasError(errorName)\n        ? `Not a valid ${errorName}`\n        : '';\n  }\n}\n","<mat-card *ngIf=\"user$ | async as user\">\n    <mat-card-title>\n      Hello {{user.email}}\n    </mat-card-title>\n    <mat-card-subtitle>\n      ID: {{user.uid}}\n    </mat-card-subtitle>\n    <mat-card-content>\n      <button mat-raised-button color=\"primary\" (click)=\"logOut()\">Logout</button>\n      <button mat-raised-button color=\"accent\" [routerLink]=\"'/diagnoses'\">Your diagnoses</button>\n    </mat-card-content>\n  </mat-card>\n  \n  <mat-card class=\"text-center\" *ngIf=\"!(user$ | async)\">\n    <mat-card-title>\n      Access to your diagnoses\n    </mat-card-title>\n    <mat-card-subtitle class=\"error\" *ngIf=\"errorMessages$ | async as errorMessage\">\n      {{ errorMessage }}\n    </mat-card-subtitle>\n    <mat-card-content>\n      <div class=\"login-container\" [formGroup]=\"loginForm\">\n        <mat-form-field>\n          <input matInput placeholder=\"Enter your email\" formControlName=\"email\" required>\n          <mat-error *ngIf=\"loginForm.get('email').invalid\">{{getErrorMessage('email', 'email')}}</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n          <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n          <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('password').invalid\">{{getErrorMessage('password')}}</mat-error>\n        </mat-form-field>\n      </div>\n      <button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\n    </mat-card-content>\n    <mat-card-content><br>----- OR -----<br><br></mat-card-content>\n    <mat-card-content>\n      <button mat-raised-button color=\"accent\" (click)=\"signUp()\">Sign Up</button>\n    </mat-card-content>\n    <mat-card-footer>\n      <mat-progress-bar *ngIf=\"isLoading$ | async\" mode=\"indeterminate\"></mat-progress-bar>\n    </mat-card-footer>\n  </mat-card>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserComponent } from './user.component';\nimport { MatCardModule } from '@angular/material/card';\n\n\n@NgModule({\n  declarations: [UserComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    MatCardModule,\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}